<?php
namespace br\gov\saude\esusab\ras\consumoalimentar;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class FichaConsumoAlimentarThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'headerTransport',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift',
        ),
        2 => array(
            'var' => 'cnsCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'identificacaoUsuario',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        4 => array(
            'var' => 'dataNascimento',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        5 => array(
            'var' => 'sexo',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        6 => array(
            'var' => 'localAtendimento',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        7 => array(
            'var' => 'perguntasQuestionarioCriancasMenoresSeisMeses',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRUCT,
            'elem' => array(
                'type' => TType::STRUCT,
                'class' => '\br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasMenoresSeisMesesThrift',
                ),
        ),
        8 => array(
            'var' => 'perguntasQuestionarioCriancasDeSeisVinteTresMeses',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRUCT,
            'elem' => array(
                'type' => TType::STRUCT,
                'class' => '\br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift',
                ),
        ),
        9 => array(
            'var' => 'perguntasQuestionarioCriancasComMaisDoisAnos',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::STRUCT,
            'elem' => array(
                'type' => TType::STRUCT,
                'class' => '\br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasComMaisDoisAnosThrift',
                ),
        ),
        10 => array(
            'var' => 'uuidFicha',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        11 => array(
            'var' => 'tpCdsOrigem',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        12 => array(
            'var' => 'cpfCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
    );

    /**
     * @var \br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift
     */
    public $headerTransport = null;
    /**
     * @var string
     */
    public $cnsCidadao = null;
    /**
     * @var string
     */
    public $identificacaoUsuario = null;
    /**
     * @var int
     */
    public $dataNascimento = null;
    /**
     * @var int
     */
    public $sexo = null;
    /**
     * @var int
     */
    public $localAtendimento = null;
    /**
     * @var \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasMenoresSeisMesesThrift[]
     */
    public $perguntasQuestionarioCriancasMenoresSeisMeses = null;
    /**
     * @var \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift[]
     */
    public $perguntasQuestionarioCriancasDeSeisVinteTresMeses = null;
    /**
     * @var \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasComMaisDoisAnosThrift[]
     */
    public $perguntasQuestionarioCriancasComMaisDoisAnos = null;
    /**
     * @var string
     */
    public $uuidFicha = null;
    /**
     * @var int
     */
    public $tpCdsOrigem = null;
    /**
     * @var string
     */
    public $cpfCidadao = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['headerTransport'])) {
                $this->headerTransport = $vals['headerTransport'];
            }
            if (isset($vals['cnsCidadao'])) {
                $this->cnsCidadao = $vals['cnsCidadao'];
            }
            if (isset($vals['identificacaoUsuario'])) {
                $this->identificacaoUsuario = $vals['identificacaoUsuario'];
            }
            if (isset($vals['dataNascimento'])) {
                $this->dataNascimento = $vals['dataNascimento'];
            }
            if (isset($vals['sexo'])) {
                $this->sexo = $vals['sexo'];
            }
            if (isset($vals['localAtendimento'])) {
                $this->localAtendimento = $vals['localAtendimento'];
            }
            if (isset($vals['perguntasQuestionarioCriancasMenoresSeisMeses'])) {
                $this->perguntasQuestionarioCriancasMenoresSeisMeses = $vals['perguntasQuestionarioCriancasMenoresSeisMeses'];
            }
            if (isset($vals['perguntasQuestionarioCriancasDeSeisVinteTresMeses'])) {
                $this->perguntasQuestionarioCriancasDeSeisVinteTresMeses = $vals['perguntasQuestionarioCriancasDeSeisVinteTresMeses'];
            }
            if (isset($vals['perguntasQuestionarioCriancasComMaisDoisAnos'])) {
                $this->perguntasQuestionarioCriancasComMaisDoisAnos = $vals['perguntasQuestionarioCriancasComMaisDoisAnos'];
            }
            if (isset($vals['uuidFicha'])) {
                $this->uuidFicha = $vals['uuidFicha'];
            }
            if (isset($vals['tpCdsOrigem'])) {
                $this->tpCdsOrigem = $vals['tpCdsOrigem'];
            }
            if (isset($vals['cpfCidadao'])) {
                $this->cpfCidadao = $vals['cpfCidadao'];
            }
        }
    }

    public function getName()
    {
        return 'FichaConsumoAlimentarThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRUCT) {
                        $this->headerTransport = new \br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift();
                        $xfer += $this->headerTransport->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cnsCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->identificacaoUsuario);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataNascimento);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->sexo);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->localAtendimento);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::LST) {
                        $this->perguntasQuestionarioCriancasMenoresSeisMeses = array();
                        $_size7 = 0;
                        $_etype10 = 0;
                        $xfer += $input->readListBegin($_etype10, $_size7);
                        for ($_i11 = 0; $_i11 < $_size7; ++$_i11) {
                            $elem12 = null;
                            $elem12 = new \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasMenoresSeisMesesThrift();
                            $xfer += $elem12->read($input);
                            $this->perguntasQuestionarioCriancasMenoresSeisMeses []= $elem12;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::LST) {
                        $this->perguntasQuestionarioCriancasDeSeisVinteTresMeses = array();
                        $_size13 = 0;
                        $_etype16 = 0;
                        $xfer += $input->readListBegin($_etype16, $_size13);
                        for ($_i17 = 0; $_i17 < $_size13; ++$_i17) {
                            $elem18 = null;
                            $elem18 = new \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift();
                            $xfer += $elem18->read($input);
                            $this->perguntasQuestionarioCriancasDeSeisVinteTresMeses []= $elem18;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::LST) {
                        $this->perguntasQuestionarioCriancasComMaisDoisAnos = array();
                        $_size19 = 0;
                        $_etype22 = 0;
                        $xfer += $input->readListBegin($_etype22, $_size19);
                        for ($_i23 = 0; $_i23 < $_size19; ++$_i23) {
                            $elem24 = null;
                            $elem24 = new \br\gov\saude\esusab\ras\consumoalimentar\PerguntaQuestionarioCriancasComMaisDoisAnosThrift();
                            $xfer += $elem24->read($input);
                            $this->perguntasQuestionarioCriancasComMaisDoisAnos []= $elem24;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 10:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidFicha);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->tpCdsOrigem);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 12:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cpfCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('FichaConsumoAlimentarThrift');
        if ($this->headerTransport !== null) {
            if (!is_object($this->headerTransport)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('headerTransport', TType::STRUCT, 1);
            $xfer += $this->headerTransport->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cnsCidadao !== null) {
            $xfer += $output->writeFieldBegin('cnsCidadao', TType::STRING, 2);
            $xfer += $output->writeString($this->cnsCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->identificacaoUsuario !== null) {
            $xfer += $output->writeFieldBegin('identificacaoUsuario', TType::STRING, 3);
            $xfer += $output->writeString($this->identificacaoUsuario);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataNascimento !== null) {
            $xfer += $output->writeFieldBegin('dataNascimento', TType::I64, 4);
            $xfer += $output->writeI64($this->dataNascimento);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->sexo !== null) {
            $xfer += $output->writeFieldBegin('sexo', TType::I64, 5);
            $xfer += $output->writeI64($this->sexo);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->localAtendimento !== null) {
            $xfer += $output->writeFieldBegin('localAtendimento', TType::I64, 6);
            $xfer += $output->writeI64($this->localAtendimento);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->perguntasQuestionarioCriancasMenoresSeisMeses !== null) {
            if (!is_array($this->perguntasQuestionarioCriancasMenoresSeisMeses)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('perguntasQuestionarioCriancasMenoresSeisMeses', TType::LST, 7);
            $output->writeListBegin(TType::STRUCT, count($this->perguntasQuestionarioCriancasMenoresSeisMeses));
            foreach ($this->perguntasQuestionarioCriancasMenoresSeisMeses as $iter25) {
                $xfer += $iter25->write($output);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->perguntasQuestionarioCriancasDeSeisVinteTresMeses !== null) {
            if (!is_array($this->perguntasQuestionarioCriancasDeSeisVinteTresMeses)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('perguntasQuestionarioCriancasDeSeisVinteTresMeses', TType::LST, 8);
            $output->writeListBegin(TType::STRUCT, count($this->perguntasQuestionarioCriancasDeSeisVinteTresMeses));
            foreach ($this->perguntasQuestionarioCriancasDeSeisVinteTresMeses as $iter26) {
                $xfer += $iter26->write($output);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->perguntasQuestionarioCriancasComMaisDoisAnos !== null) {
            if (!is_array($this->perguntasQuestionarioCriancasComMaisDoisAnos)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('perguntasQuestionarioCriancasComMaisDoisAnos', TType::LST, 9);
            $output->writeListBegin(TType::STRUCT, count($this->perguntasQuestionarioCriancasComMaisDoisAnos));
            foreach ($this->perguntasQuestionarioCriancasComMaisDoisAnos as $iter27) {
                $xfer += $iter27->write($output);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuidFicha !== null) {
            $xfer += $output->writeFieldBegin('uuidFicha', TType::STRING, 10);
            $xfer += $output->writeString($this->uuidFicha);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->tpCdsOrigem !== null) {
            $xfer += $output->writeFieldBegin('tpCdsOrigem', TType::I32, 11);
            $xfer += $output->writeI32($this->tpCdsOrigem);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cpfCidadao !== null) {
            $xfer += $output->writeFieldBegin('cpfCidadao', TType::STRING, 12);
            $xfer += $output->writeString($this->cpfCidadao);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
