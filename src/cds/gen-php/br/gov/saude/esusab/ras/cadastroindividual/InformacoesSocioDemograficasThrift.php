<?php
namespace br\gov\saude\esusab\ras\cadastroindividual;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class InformacoesSocioDemograficasThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'deficienciasCidadao',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::I64,
            'elem' => array(
                'type' => TType::I64,
                ),
        ),
        2 => array(
            'var' => 'grauInstrucaoCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        4 => array(
            'var' => 'ocupacaoCodigoCbo2002',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        5 => array(
            'var' => 'orientacaoSexualCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        6 => array(
            'var' => 'povoComunidadeTradicional',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        7 => array(
            'var' => 'relacaoParentescoCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        9 => array(
            'var' => 'situacaoMercadoTrabalhoCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        10 => array(
            'var' => 'statusDesejaInformarOrientacaoSexual',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        11 => array(
            'var' => 'statusFrequentaBenzedeira',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        12 => array(
            'var' => 'statusFrequentaEscola',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        13 => array(
            'var' => 'statusMembroPovoComunidadeTradicional',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        14 => array(
            'var' => 'statusParticipaGrupoComunitario',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        15 => array(
            'var' => 'statusPossuiPlanoSaudePrivado',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        16 => array(
            'var' => 'statusTemAlgumaDeficiencia',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        17 => array(
            'var' => 'identidadeGeneroCidadao',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        18 => array(
            'var' => 'statusDesejaInformarIdentidadeGenero',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        19 => array(
            'var' => 'responsavelPorCrianca',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::I64,
            'elem' => array(
                'type' => TType::I64,
                ),
        ),
    );

    /**
     * @var int[]
     */
    public $deficienciasCidadao = null;
    /**
     * @var int
     */
    public $grauInstrucaoCidadao = null;
    /**
     * @var string
     */
    public $ocupacaoCodigoCbo2002 = null;
    /**
     * @var int
     */
    public $orientacaoSexualCidadao = null;
    /**
     * @var string
     */
    public $povoComunidadeTradicional = null;
    /**
     * @var int
     */
    public $relacaoParentescoCidadao = null;
    /**
     * @var int
     */
    public $situacaoMercadoTrabalhoCidadao = null;
    /**
     * @var bool
     */
    public $statusDesejaInformarOrientacaoSexual = null;
    /**
     * @var bool
     */
    public $statusFrequentaBenzedeira = null;
    /**
     * @var bool
     */
    public $statusFrequentaEscola = null;
    /**
     * @var bool
     */
    public $statusMembroPovoComunidadeTradicional = null;
    /**
     * @var bool
     */
    public $statusParticipaGrupoComunitario = null;
    /**
     * @var bool
     */
    public $statusPossuiPlanoSaudePrivado = null;
    /**
     * @var bool
     */
    public $statusTemAlgumaDeficiencia = null;
    /**
     * @var int
     */
    public $identidadeGeneroCidadao = null;
    /**
     * @var bool
     */
    public $statusDesejaInformarIdentidadeGenero = null;
    /**
     * @var int[]
     */
    public $responsavelPorCrianca = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['deficienciasCidadao'])) {
                $this->deficienciasCidadao = $vals['deficienciasCidadao'];
            }
            if (isset($vals['grauInstrucaoCidadao'])) {
                $this->grauInstrucaoCidadao = $vals['grauInstrucaoCidadao'];
            }
            if (isset($vals['ocupacaoCodigoCbo2002'])) {
                $this->ocupacaoCodigoCbo2002 = $vals['ocupacaoCodigoCbo2002'];
            }
            if (isset($vals['orientacaoSexualCidadao'])) {
                $this->orientacaoSexualCidadao = $vals['orientacaoSexualCidadao'];
            }
            if (isset($vals['povoComunidadeTradicional'])) {
                $this->povoComunidadeTradicional = $vals['povoComunidadeTradicional'];
            }
            if (isset($vals['relacaoParentescoCidadao'])) {
                $this->relacaoParentescoCidadao = $vals['relacaoParentescoCidadao'];
            }
            if (isset($vals['situacaoMercadoTrabalhoCidadao'])) {
                $this->situacaoMercadoTrabalhoCidadao = $vals['situacaoMercadoTrabalhoCidadao'];
            }
            if (isset($vals['statusDesejaInformarOrientacaoSexual'])) {
                $this->statusDesejaInformarOrientacaoSexual = $vals['statusDesejaInformarOrientacaoSexual'];
            }
            if (isset($vals['statusFrequentaBenzedeira'])) {
                $this->statusFrequentaBenzedeira = $vals['statusFrequentaBenzedeira'];
            }
            if (isset($vals['statusFrequentaEscola'])) {
                $this->statusFrequentaEscola = $vals['statusFrequentaEscola'];
            }
            if (isset($vals['statusMembroPovoComunidadeTradicional'])) {
                $this->statusMembroPovoComunidadeTradicional = $vals['statusMembroPovoComunidadeTradicional'];
            }
            if (isset($vals['statusParticipaGrupoComunitario'])) {
                $this->statusParticipaGrupoComunitario = $vals['statusParticipaGrupoComunitario'];
            }
            if (isset($vals['statusPossuiPlanoSaudePrivado'])) {
                $this->statusPossuiPlanoSaudePrivado = $vals['statusPossuiPlanoSaudePrivado'];
            }
            if (isset($vals['statusTemAlgumaDeficiencia'])) {
                $this->statusTemAlgumaDeficiencia = $vals['statusTemAlgumaDeficiencia'];
            }
            if (isset($vals['identidadeGeneroCidadao'])) {
                $this->identidadeGeneroCidadao = $vals['identidadeGeneroCidadao'];
            }
            if (isset($vals['statusDesejaInformarIdentidadeGenero'])) {
                $this->statusDesejaInformarIdentidadeGenero = $vals['statusDesejaInformarIdentidadeGenero'];
            }
            if (isset($vals['responsavelPorCrianca'])) {
                $this->responsavelPorCrianca = $vals['responsavelPorCrianca'];
            }
        }
    }

    public function getName()
    {
        return 'InformacoesSocioDemograficasThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::LST) {
                        $this->deficienciasCidadao = array();
                        $_size35 = 0;
                        $_etype38 = 0;
                        $xfer += $input->readListBegin($_etype38, $_size35);
                        for ($_i39 = 0; $_i39 < $_size35; ++$_i39) {
                            $elem40 = null;
                            $xfer += $input->readI64($elem40);
                            $this->deficienciasCidadao []= $elem40;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->grauInstrucaoCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->ocupacaoCodigoCbo2002);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->orientacaoSexualCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->povoComunidadeTradicional);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->relacaoParentescoCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->situacaoMercadoTrabalhoCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 10:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusDesejaInformarOrientacaoSexual);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusFrequentaBenzedeira);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 12:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusFrequentaEscola);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 13:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusMembroPovoComunidadeTradicional);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 14:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusParticipaGrupoComunitario);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 15:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusPossuiPlanoSaudePrivado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 16:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusTemAlgumaDeficiencia);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 17:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->identidadeGeneroCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 18:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusDesejaInformarIdentidadeGenero);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 19:
                    if ($ftype == TType::LST) {
                        $this->responsavelPorCrianca = array();
                        $_size41 = 0;
                        $_etype44 = 0;
                        $xfer += $input->readListBegin($_etype44, $_size41);
                        for ($_i45 = 0; $_i45 < $_size41; ++$_i45) {
                            $elem46 = null;
                            $xfer += $input->readI64($elem46);
                            $this->responsavelPorCrianca []= $elem46;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('InformacoesSocioDemograficasThrift');
        if ($this->deficienciasCidadao !== null) {
            if (!is_array($this->deficienciasCidadao)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('deficienciasCidadao', TType::LST, 1);
            $output->writeListBegin(TType::I64, count($this->deficienciasCidadao));
            foreach ($this->deficienciasCidadao as $iter47) {
                $xfer += $output->writeI64($iter47);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->grauInstrucaoCidadao !== null) {
            $xfer += $output->writeFieldBegin('grauInstrucaoCidadao', TType::I64, 2);
            $xfer += $output->writeI64($this->grauInstrucaoCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->ocupacaoCodigoCbo2002 !== null) {
            $xfer += $output->writeFieldBegin('ocupacaoCodigoCbo2002', TType::STRING, 4);
            $xfer += $output->writeString($this->ocupacaoCodigoCbo2002);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->orientacaoSexualCidadao !== null) {
            $xfer += $output->writeFieldBegin('orientacaoSexualCidadao', TType::I64, 5);
            $xfer += $output->writeI64($this->orientacaoSexualCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->povoComunidadeTradicional !== null) {
            $xfer += $output->writeFieldBegin('povoComunidadeTradicional', TType::STRING, 6);
            $xfer += $output->writeString($this->povoComunidadeTradicional);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->relacaoParentescoCidadao !== null) {
            $xfer += $output->writeFieldBegin('relacaoParentescoCidadao', TType::I64, 7);
            $xfer += $output->writeI64($this->relacaoParentescoCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->situacaoMercadoTrabalhoCidadao !== null) {
            $xfer += $output->writeFieldBegin('situacaoMercadoTrabalhoCidadao', TType::I64, 9);
            $xfer += $output->writeI64($this->situacaoMercadoTrabalhoCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusDesejaInformarOrientacaoSexual !== null) {
            $xfer += $output->writeFieldBegin('statusDesejaInformarOrientacaoSexual', TType::BOOL, 10);
            $xfer += $output->writeBool($this->statusDesejaInformarOrientacaoSexual);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusFrequentaBenzedeira !== null) {
            $xfer += $output->writeFieldBegin('statusFrequentaBenzedeira', TType::BOOL, 11);
            $xfer += $output->writeBool($this->statusFrequentaBenzedeira);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusFrequentaEscola !== null) {
            $xfer += $output->writeFieldBegin('statusFrequentaEscola', TType::BOOL, 12);
            $xfer += $output->writeBool($this->statusFrequentaEscola);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusMembroPovoComunidadeTradicional !== null) {
            $xfer += $output->writeFieldBegin('statusMembroPovoComunidadeTradicional', TType::BOOL, 13);
            $xfer += $output->writeBool($this->statusMembroPovoComunidadeTradicional);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusParticipaGrupoComunitario !== null) {
            $xfer += $output->writeFieldBegin('statusParticipaGrupoComunitario', TType::BOOL, 14);
            $xfer += $output->writeBool($this->statusParticipaGrupoComunitario);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusPossuiPlanoSaudePrivado !== null) {
            $xfer += $output->writeFieldBegin('statusPossuiPlanoSaudePrivado', TType::BOOL, 15);
            $xfer += $output->writeBool($this->statusPossuiPlanoSaudePrivado);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusTemAlgumaDeficiencia !== null) {
            $xfer += $output->writeFieldBegin('statusTemAlgumaDeficiencia', TType::BOOL, 16);
            $xfer += $output->writeBool($this->statusTemAlgumaDeficiencia);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->identidadeGeneroCidadao !== null) {
            $xfer += $output->writeFieldBegin('identidadeGeneroCidadao', TType::I64, 17);
            $xfer += $output->writeI64($this->identidadeGeneroCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusDesejaInformarIdentidadeGenero !== null) {
            $xfer += $output->writeFieldBegin('statusDesejaInformarIdentidadeGenero', TType::BOOL, 18);
            $xfer += $output->writeBool($this->statusDesejaInformarIdentidadeGenero);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->responsavelPorCrianca !== null) {
            if (!is_array($this->responsavelPorCrianca)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('responsavelPorCrianca', TType::LST, 19);
            $output->writeListBegin(TType::I64, count($this->responsavelPorCrianca));
            foreach ($this->responsavelPorCrianca as $iter48) {
                $xfer += $output->writeI64($iter48);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
