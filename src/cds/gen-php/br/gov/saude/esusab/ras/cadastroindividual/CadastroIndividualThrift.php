<?php
namespace br\gov\saude\esusab\ras\cadastroindividual;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class CadastroIndividualThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'condicoesDeSaude',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\cadastroindividual\CondicoesDeSaudeThrift',
        ),
        3 => array(
            'var' => 'emSituacaoDeRua',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\cadastroindividual\EmSituacaoDeRuaThrift',
        ),
        4 => array(
            'var' => 'fichaAtualizada',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        5 => array(
            'var' => 'identificacaoUsuarioCidadao',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\cadastroindividual\IdentificacaoUsuarioCidadaoThrift',
        ),
        6 => array(
            'var' => 'informacoesSocioDemograficas',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\cadastroindividual\InformacoesSocioDemograficasThrift',
        ),
        7 => array(
            'var' => 'statusTermoRecusaCadastroIndividualAtencaoBasica',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        8 => array(
            'var' => 'tpCdsOrigem',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        9 => array(
            'var' => 'uuid',
            'isRequired' => true,
            'type' => TType::STRING,
        ),
        10 => array(
            'var' => 'uuidFichaOriginadora',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        11 => array(
            'var' => 'uuidCidadao',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        12 => array(
            'var' => 'saidaCidadaoCadastro',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\cadastroindividual\SaidaCidadaoCadastroThrift',
        ),
        13 => array(
            'var' => 'headerTransport',
            'isRequired' => false,
            'type' => TType::STRUCT,
            'class' => '\br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift',
        ),
        14 => array(
            'var' => 'statusCadastroIndividualInativo',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        15 => array(
            'var' => 'statusGeradoAutomaticamente',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
    );

    /**
     * @var \br\gov\saude\esusab\ras\cadastroindividual\CondicoesDeSaudeThrift
     */
    public $condicoesDeSaude = null;
    /**
     * @var \br\gov\saude\esusab\ras\cadastroindividual\EmSituacaoDeRuaThrift
     */
    public $emSituacaoDeRua = null;
    /**
     * @var bool
     */
    public $fichaAtualizada = null;
    /**
     * @var \br\gov\saude\esusab\ras\cadastroindividual\IdentificacaoUsuarioCidadaoThrift
     */
    public $identificacaoUsuarioCidadao = null;
    /**
     * @var \br\gov\saude\esusab\ras\cadastroindividual\InformacoesSocioDemograficasThrift
     */
    public $informacoesSocioDemograficas = null;
    /**
     * @var bool
     */
    public $statusTermoRecusaCadastroIndividualAtencaoBasica = null;
    /**
     * @var int
     */
    public $tpCdsOrigem = null;
    /**
     * @var string
     */
    public $uuid = null;
    /**
     * @var string
     */
    public $uuidFichaOriginadora = null;
    /**
     * @var string
     */
    public $uuidCidadao = null;
    /**
     * @var \br\gov\saude\esusab\ras\cadastroindividual\SaidaCidadaoCadastroThrift
     */
    public $saidaCidadaoCadastro = null;
    /**
     * @var \br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift
     */
    public $headerTransport = null;
    /**
     * @var bool
     */
    public $statusCadastroIndividualInativo = null;
    /**
     * @var bool
     */
    public $statusGeradoAutomaticamente = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['condicoesDeSaude'])) {
                $this->condicoesDeSaude = $vals['condicoesDeSaude'];
            }
            if (isset($vals['emSituacaoDeRua'])) {
                $this->emSituacaoDeRua = $vals['emSituacaoDeRua'];
            }
            if (isset($vals['fichaAtualizada'])) {
                $this->fichaAtualizada = $vals['fichaAtualizada'];
            }
            if (isset($vals['identificacaoUsuarioCidadao'])) {
                $this->identificacaoUsuarioCidadao = $vals['identificacaoUsuarioCidadao'];
            }
            if (isset($vals['informacoesSocioDemograficas'])) {
                $this->informacoesSocioDemograficas = $vals['informacoesSocioDemograficas'];
            }
            if (isset($vals['statusTermoRecusaCadastroIndividualAtencaoBasica'])) {
                $this->statusTermoRecusaCadastroIndividualAtencaoBasica = $vals['statusTermoRecusaCadastroIndividualAtencaoBasica'];
            }
            if (isset($vals['tpCdsOrigem'])) {
                $this->tpCdsOrigem = $vals['tpCdsOrigem'];
            }
            if (isset($vals['uuid'])) {
                $this->uuid = $vals['uuid'];
            }
            if (isset($vals['uuidFichaOriginadora'])) {
                $this->uuidFichaOriginadora = $vals['uuidFichaOriginadora'];
            }
            if (isset($vals['uuidCidadao'])) {
                $this->uuidCidadao = $vals['uuidCidadao'];
            }
            if (isset($vals['saidaCidadaoCadastro'])) {
                $this->saidaCidadaoCadastro = $vals['saidaCidadaoCadastro'];
            }
            if (isset($vals['headerTransport'])) {
                $this->headerTransport = $vals['headerTransport'];
            }
            if (isset($vals['statusCadastroIndividualInativo'])) {
                $this->statusCadastroIndividualInativo = $vals['statusCadastroIndividualInativo'];
            }
            if (isset($vals['statusGeradoAutomaticamente'])) {
                $this->statusGeradoAutomaticamente = $vals['statusGeradoAutomaticamente'];
            }
        }
    }

    public function getName()
    {
        return 'CadastroIndividualThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRUCT) {
                        $this->condicoesDeSaude = new \br\gov\saude\esusab\ras\cadastroindividual\CondicoesDeSaudeThrift();
                        $xfer += $this->condicoesDeSaude->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::STRUCT) {
                        $this->emSituacaoDeRua = new \br\gov\saude\esusab\ras\cadastroindividual\EmSituacaoDeRuaThrift();
                        $xfer += $this->emSituacaoDeRua->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->fichaAtualizada);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::STRUCT) {
                        $this->identificacaoUsuarioCidadao = new \br\gov\saude\esusab\ras\cadastroindividual\IdentificacaoUsuarioCidadaoThrift();
                        $xfer += $this->identificacaoUsuarioCidadao->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::STRUCT) {
                        $this->informacoesSocioDemograficas = new \br\gov\saude\esusab\ras\cadastroindividual\InformacoesSocioDemograficasThrift();
                        $xfer += $this->informacoesSocioDemograficas->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusTermoRecusaCadastroIndividualAtencaoBasica);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->tpCdsOrigem);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuid);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 10:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidFichaOriginadora);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->uuidCidadao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 12:
                    if ($ftype == TType::STRUCT) {
                        $this->saidaCidadaoCadastro = new \br\gov\saude\esusab\ras\cadastroindividual\SaidaCidadaoCadastroThrift();
                        $xfer += $this->saidaCidadaoCadastro->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 13:
                    if ($ftype == TType::STRUCT) {
                        $this->headerTransport = new \br\gov\saude\esusab\ras\common\UnicaLotacaoHeaderThrift();
                        $xfer += $this->headerTransport->read($input);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 14:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusCadastroIndividualInativo);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 15:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusGeradoAutomaticamente);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('CadastroIndividualThrift');
        if ($this->condicoesDeSaude !== null) {
            if (!is_object($this->condicoesDeSaude)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('condicoesDeSaude', TType::STRUCT, 1);
            $xfer += $this->condicoesDeSaude->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->emSituacaoDeRua !== null) {
            if (!is_object($this->emSituacaoDeRua)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('emSituacaoDeRua', TType::STRUCT, 3);
            $xfer += $this->emSituacaoDeRua->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->fichaAtualizada !== null) {
            $xfer += $output->writeFieldBegin('fichaAtualizada', TType::BOOL, 4);
            $xfer += $output->writeBool($this->fichaAtualizada);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->identificacaoUsuarioCidadao !== null) {
            if (!is_object($this->identificacaoUsuarioCidadao)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('identificacaoUsuarioCidadao', TType::STRUCT, 5);
            $xfer += $this->identificacaoUsuarioCidadao->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->informacoesSocioDemograficas !== null) {
            if (!is_object($this->informacoesSocioDemograficas)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('informacoesSocioDemograficas', TType::STRUCT, 6);
            $xfer += $this->informacoesSocioDemograficas->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusTermoRecusaCadastroIndividualAtencaoBasica !== null) {
            $xfer += $output->writeFieldBegin('statusTermoRecusaCadastroIndividualAtencaoBasica', TType::BOOL, 7);
            $xfer += $output->writeBool($this->statusTermoRecusaCadastroIndividualAtencaoBasica);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->tpCdsOrigem !== null) {
            $xfer += $output->writeFieldBegin('tpCdsOrigem', TType::I32, 8);
            $xfer += $output->writeI32($this->tpCdsOrigem);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuid !== null) {
            $xfer += $output->writeFieldBegin('uuid', TType::STRING, 9);
            $xfer += $output->writeString($this->uuid);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuidFichaOriginadora !== null) {
            $xfer += $output->writeFieldBegin('uuidFichaOriginadora', TType::STRING, 10);
            $xfer += $output->writeString($this->uuidFichaOriginadora);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->uuidCidadao !== null) {
            $xfer += $output->writeFieldBegin('uuidCidadao', TType::STRING, 11);
            $xfer += $output->writeString($this->uuidCidadao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->saidaCidadaoCadastro !== null) {
            if (!is_object($this->saidaCidadaoCadastro)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('saidaCidadaoCadastro', TType::STRUCT, 12);
            $xfer += $this->saidaCidadaoCadastro->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->headerTransport !== null) {
            if (!is_object($this->headerTransport)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('headerTransport', TType::STRUCT, 13);
            $xfer += $this->headerTransport->write($output);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusCadastroIndividualInativo !== null) {
            $xfer += $output->writeFieldBegin('statusCadastroIndividualInativo', TType::BOOL, 14);
            $xfer += $output->writeBool($this->statusCadastroIndividualInativo);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusGeradoAutomaticamente !== null) {
            $xfer += $output->writeFieldBegin('statusGeradoAutomaticamente', TType::BOOL, 15);
            $xfer += $output->writeBool($this->statusGeradoAutomaticamente);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
