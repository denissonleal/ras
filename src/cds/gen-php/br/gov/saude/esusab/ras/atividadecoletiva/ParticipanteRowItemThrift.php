<?php
namespace br\gov\saude\esusab\ras\atividadecoletiva;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class ParticipanteRowItemThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'cnsParticipante',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'dataNascimento',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        3 => array(
            'var' => 'avaliacaoAlterada',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        4 => array(
            'var' => 'peso',
            'isRequired' => false,
            'type' => TType::DOUBLE,
        ),
        5 => array(
            'var' => 'altura',
            'isRequired' => false,
            'type' => TType::DOUBLE,
        ),
        6 => array(
            'var' => 'cessouHabitoFumar',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        7 => array(
            'var' => 'abandonouGrupo',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        8 => array(
            'var' => 'sexo',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        9 => array(
            'var' => 'cpfParticipante',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
    );

    /**
     * @var string
     */
    public $cnsParticipante = null;
    /**
     * @var int
     */
    public $dataNascimento = null;
    /**
     * @var bool
     */
    public $avaliacaoAlterada = null;
    /**
     * @var double
     */
    public $peso = null;
    /**
     * @var double
     */
    public $altura = null;
    /**
     * @var bool
     */
    public $cessouHabitoFumar = null;
    /**
     * @var bool
     */
    public $abandonouGrupo = null;
    /**
     * @var int
     */
    public $sexo = null;
    /**
     * @var string
     */
    public $cpfParticipante = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['cnsParticipante'])) {
                $this->cnsParticipante = $vals['cnsParticipante'];
            }
            if (isset($vals['dataNascimento'])) {
                $this->dataNascimento = $vals['dataNascimento'];
            }
            if (isset($vals['avaliacaoAlterada'])) {
                $this->avaliacaoAlterada = $vals['avaliacaoAlterada'];
            }
            if (isset($vals['peso'])) {
                $this->peso = $vals['peso'];
            }
            if (isset($vals['altura'])) {
                $this->altura = $vals['altura'];
            }
            if (isset($vals['cessouHabitoFumar'])) {
                $this->cessouHabitoFumar = $vals['cessouHabitoFumar'];
            }
            if (isset($vals['abandonouGrupo'])) {
                $this->abandonouGrupo = $vals['abandonouGrupo'];
            }
            if (isset($vals['sexo'])) {
                $this->sexo = $vals['sexo'];
            }
            if (isset($vals['cpfParticipante'])) {
                $this->cpfParticipante = $vals['cpfParticipante'];
            }
        }
    }

    public function getName()
    {
        return 'ParticipanteRowItemThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cnsParticipante);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataNascimento);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->avaliacaoAlterada);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::DOUBLE) {
                        $xfer += $input->readDouble($this->peso);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::DOUBLE) {
                        $xfer += $input->readDouble($this->altura);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->cessouHabitoFumar);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->abandonouGrupo);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->sexo);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cpfParticipante);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('ParticipanteRowItemThrift');
        if ($this->cnsParticipante !== null) {
            $xfer += $output->writeFieldBegin('cnsParticipante', TType::STRING, 1);
            $xfer += $output->writeString($this->cnsParticipante);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->dataNascimento !== null) {
            $xfer += $output->writeFieldBegin('dataNascimento', TType::I64, 2);
            $xfer += $output->writeI64($this->dataNascimento);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->avaliacaoAlterada !== null) {
            $xfer += $output->writeFieldBegin('avaliacaoAlterada', TType::BOOL, 3);
            $xfer += $output->writeBool($this->avaliacaoAlterada);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->peso !== null) {
            $xfer += $output->writeFieldBegin('peso', TType::DOUBLE, 4);
            $xfer += $output->writeDouble($this->peso);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->altura !== null) {
            $xfer += $output->writeFieldBegin('altura', TType::DOUBLE, 5);
            $xfer += $output->writeDouble($this->altura);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cessouHabitoFumar !== null) {
            $xfer += $output->writeFieldBegin('cessouHabitoFumar', TType::BOOL, 6);
            $xfer += $output->writeBool($this->cessouHabitoFumar);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->abandonouGrupo !== null) {
            $xfer += $output->writeFieldBegin('abandonouGrupo', TType::BOOL, 7);
            $xfer += $output->writeBool($this->abandonouGrupo);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->sexo !== null) {
            $xfer += $output->writeFieldBegin('sexo', TType::I64, 8);
            $xfer += $output->writeI64($this->sexo);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cpfParticipante !== null) {
            $xfer += $output->writeFieldBegin('cpfParticipante', TType::STRING, 9);
            $xfer += $output->writeString($this->cpfParticipante);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
