<?php
namespace br\gov\saude\esusab\ras\cadastroindividual;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class EmSituacaoDeRuaThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'grauParentescoFamiliarFrequentado',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'higienePessoalSituacaoRua',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::I64,
            'elem' => array(
                'type' => TType::I64,
                ),
        ),
        3 => array(
            'var' => 'origemAlimentoSituacaoRua',
            'isRequired' => false,
            'type' => TType::LST,
            'etype' => TType::I64,
            'elem' => array(
                'type' => TType::I64,
                ),
        ),
        4 => array(
            'var' => 'outraInstituicaoQueAcompanha',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        5 => array(
            'var' => 'quantidadeAlimentacoesAoDiaSituacaoRua',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        6 => array(
            'var' => 'statusAcompanhadoPorOutraInstituicao',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        7 => array(
            'var' => 'statusPossuiReferenciaFamiliar',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        8 => array(
            'var' => 'statusRecebeBeneficio',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        9 => array(
            'var' => 'statusSituacaoRua',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        10 => array(
            'var' => 'statusTemAcessoHigienePessoalSituacaoRua',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        11 => array(
            'var' => 'statusVisitaFamiliarFrequentemente',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        12 => array(
            'var' => 'tempoSituacaoRua',
            'isRequired' => false,
            'type' => TType::I64,
        ),
    );

    /**
     * @var string
     */
    public $grauParentescoFamiliarFrequentado = null;
    /**
     * @var int[]
     */
    public $higienePessoalSituacaoRua = null;
    /**
     * @var int[]
     */
    public $origemAlimentoSituacaoRua = null;
    /**
     * @var string
     */
    public $outraInstituicaoQueAcompanha = null;
    /**
     * @var int
     */
    public $quantidadeAlimentacoesAoDiaSituacaoRua = null;
    /**
     * @var bool
     */
    public $statusAcompanhadoPorOutraInstituicao = null;
    /**
     * @var bool
     */
    public $statusPossuiReferenciaFamiliar = null;
    /**
     * @var bool
     */
    public $statusRecebeBeneficio = null;
    /**
     * @var bool
     */
    public $statusSituacaoRua = null;
    /**
     * @var bool
     */
    public $statusTemAcessoHigienePessoalSituacaoRua = null;
    /**
     * @var bool
     */
    public $statusVisitaFamiliarFrequentemente = null;
    /**
     * @var int
     */
    public $tempoSituacaoRua = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['grauParentescoFamiliarFrequentado'])) {
                $this->grauParentescoFamiliarFrequentado = $vals['grauParentescoFamiliarFrequentado'];
            }
            if (isset($vals['higienePessoalSituacaoRua'])) {
                $this->higienePessoalSituacaoRua = $vals['higienePessoalSituacaoRua'];
            }
            if (isset($vals['origemAlimentoSituacaoRua'])) {
                $this->origemAlimentoSituacaoRua = $vals['origemAlimentoSituacaoRua'];
            }
            if (isset($vals['outraInstituicaoQueAcompanha'])) {
                $this->outraInstituicaoQueAcompanha = $vals['outraInstituicaoQueAcompanha'];
            }
            if (isset($vals['quantidadeAlimentacoesAoDiaSituacaoRua'])) {
                $this->quantidadeAlimentacoesAoDiaSituacaoRua = $vals['quantidadeAlimentacoesAoDiaSituacaoRua'];
            }
            if (isset($vals['statusAcompanhadoPorOutraInstituicao'])) {
                $this->statusAcompanhadoPorOutraInstituicao = $vals['statusAcompanhadoPorOutraInstituicao'];
            }
            if (isset($vals['statusPossuiReferenciaFamiliar'])) {
                $this->statusPossuiReferenciaFamiliar = $vals['statusPossuiReferenciaFamiliar'];
            }
            if (isset($vals['statusRecebeBeneficio'])) {
                $this->statusRecebeBeneficio = $vals['statusRecebeBeneficio'];
            }
            if (isset($vals['statusSituacaoRua'])) {
                $this->statusSituacaoRua = $vals['statusSituacaoRua'];
            }
            if (isset($vals['statusTemAcessoHigienePessoalSituacaoRua'])) {
                $this->statusTemAcessoHigienePessoalSituacaoRua = $vals['statusTemAcessoHigienePessoalSituacaoRua'];
            }
            if (isset($vals['statusVisitaFamiliarFrequentemente'])) {
                $this->statusVisitaFamiliarFrequentemente = $vals['statusVisitaFamiliarFrequentemente'];
            }
            if (isset($vals['tempoSituacaoRua'])) {
                $this->tempoSituacaoRua = $vals['tempoSituacaoRua'];
            }
        }
    }

    public function getName()
    {
        return 'EmSituacaoDeRuaThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->grauParentescoFamiliarFrequentado);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::LST) {
                        $this->higienePessoalSituacaoRua = array();
                        $_size21 = 0;
                        $_etype24 = 0;
                        $xfer += $input->readListBegin($_etype24, $_size21);
                        for ($_i25 = 0; $_i25 < $_size21; ++$_i25) {
                            $elem26 = null;
                            $xfer += $input->readI64($elem26);
                            $this->higienePessoalSituacaoRua []= $elem26;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::LST) {
                        $this->origemAlimentoSituacaoRua = array();
                        $_size27 = 0;
                        $_etype30 = 0;
                        $xfer += $input->readListBegin($_etype30, $_size27);
                        for ($_i31 = 0; $_i31 < $_size27; ++$_i31) {
                            $elem32 = null;
                            $xfer += $input->readI64($elem32);
                            $this->origemAlimentoSituacaoRua []= $elem32;
                        }
                        $xfer += $input->readListEnd();
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->outraInstituicaoQueAcompanha);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->quantidadeAlimentacoesAoDiaSituacaoRua);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusAcompanhadoPorOutraInstituicao);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusPossuiReferenciaFamiliar);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusRecebeBeneficio);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 9:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusSituacaoRua);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 10:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusTemAcessoHigienePessoalSituacaoRua);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->statusVisitaFamiliarFrequentemente);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 12:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->tempoSituacaoRua);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('EmSituacaoDeRuaThrift');
        if ($this->grauParentescoFamiliarFrequentado !== null) {
            $xfer += $output->writeFieldBegin('grauParentescoFamiliarFrequentado', TType::STRING, 1);
            $xfer += $output->writeString($this->grauParentescoFamiliarFrequentado);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->higienePessoalSituacaoRua !== null) {
            if (!is_array($this->higienePessoalSituacaoRua)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('higienePessoalSituacaoRua', TType::LST, 2);
            $output->writeListBegin(TType::I64, count($this->higienePessoalSituacaoRua));
            foreach ($this->higienePessoalSituacaoRua as $iter33) {
                $xfer += $output->writeI64($iter33);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->origemAlimentoSituacaoRua !== null) {
            if (!is_array($this->origemAlimentoSituacaoRua)) {
                throw new TProtocolException('Bad type in structure.', TProtocolException::INVALID_DATA);
            }
            $xfer += $output->writeFieldBegin('origemAlimentoSituacaoRua', TType::LST, 3);
            $output->writeListBegin(TType::I64, count($this->origemAlimentoSituacaoRua));
            foreach ($this->origemAlimentoSituacaoRua as $iter34) {
                $xfer += $output->writeI64($iter34);
            }
            $output->writeListEnd();
            $xfer += $output->writeFieldEnd();
        }
        if ($this->outraInstituicaoQueAcompanha !== null) {
            $xfer += $output->writeFieldBegin('outraInstituicaoQueAcompanha', TType::STRING, 4);
            $xfer += $output->writeString($this->outraInstituicaoQueAcompanha);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->quantidadeAlimentacoesAoDiaSituacaoRua !== null) {
            $xfer += $output->writeFieldBegin('quantidadeAlimentacoesAoDiaSituacaoRua', TType::I64, 5);
            $xfer += $output->writeI64($this->quantidadeAlimentacoesAoDiaSituacaoRua);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusAcompanhadoPorOutraInstituicao !== null) {
            $xfer += $output->writeFieldBegin('statusAcompanhadoPorOutraInstituicao', TType::BOOL, 6);
            $xfer += $output->writeBool($this->statusAcompanhadoPorOutraInstituicao);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusPossuiReferenciaFamiliar !== null) {
            $xfer += $output->writeFieldBegin('statusPossuiReferenciaFamiliar', TType::BOOL, 7);
            $xfer += $output->writeBool($this->statusPossuiReferenciaFamiliar);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusRecebeBeneficio !== null) {
            $xfer += $output->writeFieldBegin('statusRecebeBeneficio', TType::BOOL, 8);
            $xfer += $output->writeBool($this->statusRecebeBeneficio);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusSituacaoRua !== null) {
            $xfer += $output->writeFieldBegin('statusSituacaoRua', TType::BOOL, 9);
            $xfer += $output->writeBool($this->statusSituacaoRua);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusTemAcessoHigienePessoalSituacaoRua !== null) {
            $xfer += $output->writeFieldBegin('statusTemAcessoHigienePessoalSituacaoRua', TType::BOOL, 10);
            $xfer += $output->writeBool($this->statusTemAcessoHigienePessoalSituacaoRua);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusVisitaFamiliarFrequentemente !== null) {
            $xfer += $output->writeFieldBegin('statusVisitaFamiliarFrequentemente', TType::BOOL, 11);
            $xfer += $output->writeBool($this->statusVisitaFamiliarFrequentemente);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->tempoSituacaoRua !== null) {
            $xfer += $output->writeFieldBegin('tempoSituacaoRua', TType::I64, 12);
            $xfer += $output->writeI64($this->tempoSituacaoRua);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
