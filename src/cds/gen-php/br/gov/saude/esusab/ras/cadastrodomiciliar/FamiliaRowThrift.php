<?php
namespace br\gov\saude\esusab\ras\cadastrodomiciliar;

/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class FamiliaRowThrift
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'dataNascimentoResponsavel',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        2 => array(
            'var' => 'numeroCnsResponsavel',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'numeroMembrosFamilia',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        4 => array(
            'var' => 'numeroProntuario',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        5 => array(
            'var' => 'rendaFamiliar',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        6 => array(
            'var' => 'resideDesde',
            'isRequired' => false,
            'type' => TType::I64,
        ),
        7 => array(
            'var' => 'stMudanca',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        8 => array(
            'var' => 'cpfResponsavel',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
    );

    /**
     * @var int
     */
    public $dataNascimentoResponsavel = null;
    /**
     * @var string
     */
    public $numeroCnsResponsavel = null;
    /**
     * @var int
     */
    public $numeroMembrosFamilia = null;
    /**
     * @var string
     */
    public $numeroProntuario = null;
    /**
     * @var int
     */
    public $rendaFamiliar = null;
    /**
     * @var int
     */
    public $resideDesde = null;
    /**
     * @var bool
     */
    public $stMudanca = null;
    /**
     * @var string
     */
    public $cpfResponsavel = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['dataNascimentoResponsavel'])) {
                $this->dataNascimentoResponsavel = $vals['dataNascimentoResponsavel'];
            }
            if (isset($vals['numeroCnsResponsavel'])) {
                $this->numeroCnsResponsavel = $vals['numeroCnsResponsavel'];
            }
            if (isset($vals['numeroMembrosFamilia'])) {
                $this->numeroMembrosFamilia = $vals['numeroMembrosFamilia'];
            }
            if (isset($vals['numeroProntuario'])) {
                $this->numeroProntuario = $vals['numeroProntuario'];
            }
            if (isset($vals['rendaFamiliar'])) {
                $this->rendaFamiliar = $vals['rendaFamiliar'];
            }
            if (isset($vals['resideDesde'])) {
                $this->resideDesde = $vals['resideDesde'];
            }
            if (isset($vals['stMudanca'])) {
                $this->stMudanca = $vals['stMudanca'];
            }
            if (isset($vals['cpfResponsavel'])) {
                $this->cpfResponsavel = $vals['cpfResponsavel'];
            }
        }
    }

    public function getName()
    {
        return 'FamiliaRowThrift';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->dataNascimentoResponsavel);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->numeroCnsResponsavel);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->numeroMembrosFamilia);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->numeroProntuario);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->rendaFamiliar);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->resideDesde);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->stMudanca);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->cpfResponsavel);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('FamiliaRowThrift');
        if ($this->dataNascimentoResponsavel !== null) {
            $xfer += $output->writeFieldBegin('dataNascimentoResponsavel', TType::I64, 1);
            $xfer += $output->writeI64($this->dataNascimentoResponsavel);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->numeroCnsResponsavel !== null) {
            $xfer += $output->writeFieldBegin('numeroCnsResponsavel', TType::STRING, 2);
            $xfer += $output->writeString($this->numeroCnsResponsavel);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->numeroMembrosFamilia !== null) {
            $xfer += $output->writeFieldBegin('numeroMembrosFamilia', TType::I32, 3);
            $xfer += $output->writeI32($this->numeroMembrosFamilia);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->numeroProntuario !== null) {
            $xfer += $output->writeFieldBegin('numeroProntuario', TType::STRING, 4);
            $xfer += $output->writeString($this->numeroProntuario);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->rendaFamiliar !== null) {
            $xfer += $output->writeFieldBegin('rendaFamiliar', TType::I64, 5);
            $xfer += $output->writeI64($this->rendaFamiliar);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->resideDesde !== null) {
            $xfer += $output->writeFieldBegin('resideDesde', TType::I64, 6);
            $xfer += $output->writeI64($this->resideDesde);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->stMudanca !== null) {
            $xfer += $output->writeFieldBegin('stMudanca', TType::BOOL, 7);
            $xfer += $output->writeBool($this->stMudanca);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->cpfResponsavel !== null) {
            $xfer += $output->writeFieldBegin('cpfResponsavel', TType::STRING, 8);
            $xfer += $output->writeString($this->cpfResponsavel);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
